- name: disable current nodejs 
  ansible.builtin.command: "dnf module disable nodejs -y"
- name: enable nodejs
  ansible.builtin.command: "dnf module enable nodejs:20 -y"
- name: install nodejs
  ansible.builtin.package:
     name: "{{item}}"
     state: installed
  loop:
     - nodejs
     - mysql
  
- name: create expense user
  ansible.builtin.user:
     name: expense
- name: import task from commonrole
  include_role:
    name: common
    tasks_from: main

# - name: create appdirectory
#   ansible.builtin.file:
#      name: /app
#      state: directory
# - name: Downloading application code
#   ansible.builtin.get_url:
#      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#      dest: /tmp/backend.zip
# - name: unzip downloaded application code
#   ansible.builtin.unarchive:
#      src: /tmp/backend.zip
#      dest: /app
#      remote_src: yes
- name: install dependenices
  community.general.npm:
     path: /app
- name: copy backend service
  ansible.builtin.template:
     src: backend.service.j2
     dest: /etc/systemd/system/backend.service
- name: install pip libraries
  ansible.builtin.pip:
     name: "{{item}}"
     executable: pip3.9
  loop:
     - pymysql
     - cryptography 
- name: import mysql data
  community.mysql.mysql_db:
     state: import
     name: all
     login_user: "{{mysql_user}}"
     login_password: "{{mysql_password}}"
     login_host: "{{mysql_host}}"
     target: /app/schema/backend.sql
- name: daemon reload and restart service
  tags:
   - deployment
  ansible.builtin.systemd_service:
     state: restarted
     daemon_reload: true
     enabled: true
     name: backend